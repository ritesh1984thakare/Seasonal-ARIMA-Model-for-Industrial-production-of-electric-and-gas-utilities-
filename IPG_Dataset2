import os

os.chdir("D:\Data Science Training\Data")

import pandas as pd

energy_data = pd.read_csv("IPG_Dataset(2).csv")

energy_data.head(10)

energy_data.describe()

energy_data.plot(figsize=(12,12))

from statsmodels.tsa.seasonal import seasonal_decompose

result = seasonal_decompose(energy_data.PRODUCTION, model='multiplicative',freq=12)

from pylab import rcParams

rcParams['figure.figsize'] = 10,10

result.plot()

import pandas as pd

energy = energy_data.PRODUCTION

log_energy = np.log(energy)

log_energy.plot()

energy.plot()

from pandas import Series

d_log_energy = Series.diff(log_energy,periods=1)

d_log_energy.plot()

dd_log_energy = Series.diff(d_log_energy,periods=12)

dd_log_energy.plot(figsize=(10,5))

dd_log_energy.isna()

dd_log_energy.dropna(inplace=True)

import statsmodels.api as sm

import matplotlib.pyplot as plt

fig = plt.figure(figsize=(10,10))

ax = fig.add_subplot()

fig = sm.graphics.tsa.plot_acf(dd_log_energy, lags=50, ax=ax)

fig = plt.figure(figsize=(10,10))

ax = fig.add_subplot()

fig = sm.graphics.tsa.plot_pacf(dd_log_energy, lags=50, ax=ax)

arima_model = sm.tsa.statespace.SARIMAX(energy,order=(2,1,2),seasonal_order=(0,1,2,12))

arima_model_fit = arima_model.fit()

arima_model_fit.aic

pred = arima_model_fit.get_prediction(start = 900, end = 967, dynamic=False)

ax = energy.plot(label='observed')

pred.predicted_mean.plot(ax=ax, label='forecast', alpha=.7)

plt.legend()

ax = energy[850:1000].plot(label='observed',figsize=(15,10),color='red')

pred.predicted_mean.plot(ax=ax, label='forecast', alpha=.7,color='blue')

plt.legend()

from pyramid.arima import auto_arima


stepwise_model = auto_arima(energy, start_p=1, start_q=1,
                           max_p=3, max_q=3, m=12,
                           start_P=0,start_Q=0,seasonal=True,
                           d=1, D=1, trace=True,
                           error_action='ignore',  
                           suppress_warnings=True, 
                           stepwise=True)

stepwise_model

print(stepwise_model.aic())


